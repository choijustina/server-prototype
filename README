Creating a server-side event stream server/client prototype
Joyce Chang (rejoyce@bu.edu) github: joooooyce
Justina Choi (choi.justina@gmail.com) github: choijustina


----------------------
Text files: shortfile.txt, longfile.txt, longfile_10.txt

PROTOTYPE 1
Related files: SseServer.java, index.html, SSE.html
	SseServer.java
		- extends HttpServlet
		- uses a Scanner object to read the text file with the following types of information:
			int id number, String event type, String message data
			- note: the text file must be of the following format in order to be read correctly
				id: 0
				event: personal
				data: this is line 0
				
				id: 1
				event: business
				data: this is line 1
			
		- example output (localhost:8080/SSE/SSE.html):
			data: Searching in longfile.txt
		
			event: personal
			data: 0 personal - this is line 0 accessed at <CurrentDate>
			
			event: business
			data: 1 business - this is line 1 accessed at <CurrentDate>
			
		- "event: <eventtype>" is used for filter purposes
		- sleep timer of 1000milliseconds
		- must have a out.flush(); after every out.print(<String>);

	SSE.html
		- EventListeners for filter function
		- auto scroll to keep at top
		
	index.html
		- resizeable iframe (drag to resize)
		- text-wrapping
		- filter by event type


PROTOTYPE 2
Related Files: SSE_Rabbit.java, ProducerInterface.java, ConsoleProducer.java, TextfileProducer.java
	SSE_Rabbit.java
		- RabbitMQ implementation; creates a consumer to get messages from the queue
		- outputs "[*] Waiting for messages." when ready
		- uses message acknowledgments & fanout exchange (all of the consumers receive all
			of the messages sent by producers with the same exchange name)
		- automatically reconnects
		- CLOSE_PRODUCER & CLOSE_CONSUMER global variables that cause each to close
	ProducerInterface.java
		- interface outlining required methods for the producer
		- current implementation: console and text file
		- 
	ConsoleProducer.java
		- implements interface such that messages are typed into the console/terminal
	TextfileProducer.java
		- implements interface such that each line in the text file is a message
		- has a thread sleep timer of 25milliseconds
		
	
"*_high" files: creates a producer with binding key "high.*"







